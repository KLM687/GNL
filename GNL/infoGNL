# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    infoGNL                                            :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: flee <marvin@42.fr>                        +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2021/06/27 11:36:35 by flee              #+#    #+#              #
#    Updated: 2021/06/27 12:17:14 by flee             ###   ########.fr        #
#                                                                              #
# **************************************************************************** #


				GET TO NEXT LINE

Fonctions :

	I) Read
		
		#include <unistd.h>
		
		ssize_t read(int fd, void *buf, size_t count);
		int fd = target file;
		size_t count = read to the number set by count (octet)
		if (count > SSIZE_MAX)
			return indefinite

		return (-1) = if fail with error code , head lecture location is indefinite
		return (number of octet read (0 if EOF))
		if return number is smaller than the count is normal
			happen when EOF or readfrom tube or a terminal
			or if read was broken by a signal



	II)Buffer;
		temporary storage;

		Behaviour:
			When we try to pass more than the required number of values as input then, the remaining values will automatically hold in the input buffer.
			This buffer data automatically go to the next input functionality, if it is exists.
	
		type of Buffer:
	
			Hardware buffers:
				These are buffers where data is stored before being moved to a HW device.
				Or buffers where data is stored while being received from the HW device until it is processed by the application.
				This is needed because the I/O operation usually has memory and timing requirements, and these are fulfilled by the buffer.
				Think of DMA devices that read/write directly to memory, if the memory is not set up properly the system may crash.
				Or sound devices that must have sub-microsecond precision or it will work poorly.

			Cache buffers:
				These are buffers where data is grouped before writing into/read from a file/device so that the performance is generally improved.

			Helper buffers:
				You move data into/from such a buffer, because it is easier for your algorithm.


PROTOTYPE :

int		get_next_line(int fd, char **line)
	
	Behaviour GNL;
		Copy from the file descriptor to char **line.
		We need to count the size of every line for using read after.
		We need to count the size of the file descriptor for the buffer.

